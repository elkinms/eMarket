import { configureStore } from '@reduxjs/toolkit';
import cartReducer from './cartSlice';

// –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
const loadFromLocalStorage = () => {
    try {
        const data = localStorage.getItem('cart');
        if (data === null) return undefined;
        return {
            cart: JSON.parse(data)
        };
    } catch (e) {
        console.warn('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ localStorage:', e);
        return undefined;
    }
};

// –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
const saveToLocalStorage = (state) => {
    try {
        const serialized = JSON.stringify(state.cart);
        localStorage.setItem('cart', serialized);
    } catch (e) {
        console.warn('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ localStorage:', e);
    }
};

const store = configureStore({
    reducer: {
        cart: cartReducer
    },
    preloadedState: loadFromLocalStorage(), // üü° <- –¥–æ–±–∞–≤–ª–µ–Ω–æ
});

// –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è store ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
store.subscribe(() => {
    saveToLocalStorage(store.getState());
});

export default store;
